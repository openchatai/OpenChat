# use the dockerfile provided at root, this is only for development purposes and will be deleted
version: '3.9'
services:
  mysql:
    restart: unless-stopped
    container_name: oc_mysql
    image: "mysql:8"
    ports:
      - "3307:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: openchat
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
    volumes:
      - database:/var/lib/mysql
    networks:
      - openchat_network

  qdrant:
    image: qdrant/qdrant
    container_name: oc_qdrant
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - openchat_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oc_web
    ports:
      - "8001:8000"
    volumes:
      - ./website_data_sources:/app/website_data_sources
    # - ./llama-2-7b-chat.ggmlv3.q4_K_M.bin:/app/llama-2-7b-chat.ggmlv3.q4_K_M.bin:ro
    depends_on:
      - mysql
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate auth && 
             python manage.py migrate && 
             python manage.py create_superuser &&
             python manage.py sync_models &&
             python manage.py runserver 0.0.0.0:8000"
    networks:
      - openchat_network

  adminer:
    image: adminer
    container_name: oc_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db # Change this to match your database server name
    depends_on:
      - mysql
    networks:
      - openchat_network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oc_celery
    volumes:
      - ./website_data_sources:/app/website_data_sources
    # - ./llama-2-7b-chat.ggmlv3.q4_K_M.bin:/app/llama-2-7b-chat.ggmlv3.q4_K_M.bin:ro
    depends_on:
      - web
    env_file:
      - .env
    command: celery -A dj_backend_server worker --loglevel=info
    networks:
      - openchat_network
  
  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ACCESS_KEY: your-access-key
      MINIO_SECRET_KEY: your-secret-key
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data
    command: server /data
    networks:
      - openchat_network


  redis:
    image: redis:latest
    container_name: oc_redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openchat_network

  nginx:
    image: nginx
    container_name: oc_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl/cert.pem:/etc/nginx/ssl/cert.pem
      - ./nginx/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
      - ./static:/app/web/static/
    networks:
      - openchat_network
    depends_on:
      - qdrant
      - mysql
      - web
      - redis
      - celery_worker

networks:
  openchat_network:


volumes:
  qdrant_storage:
  database:
  redis_data:
